name: Python CI with E2E
on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      python_version:
        type: string
        required: true
      artifact_name:
        type: string
      artifact_path:
        type: string
    secrets:
      TECHONOMY_REPOS_GITHUB_TOKEN:
        required: true

jobs:
  linting-and-tests:
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ${{ inputs.name }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Download static files
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ inputs.artifact_path }}
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v2
        with:
           python-version: '${{ inputs.python_version }}'
      - name: Setup ssh:// to https:// mapping with a token
        run: |
          git config --global url."https://${{ secrets.TECHONOMY_REPOS_GITHUB_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
      - name: Install python dependencies
        run: |
          pip3 install pip==22.0.3
          pip3 install poetry<1.2
          make install
      - name: Lint with flake8 (black and isort)
        run: |
          source $(poetry env info --path)/bin/activate
          make lint
      - name: Run the unit/functional testsuite
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost/${{ inputs.name }}'
        run: |
          source $(poetry env info --path)/bin/activate
          make test
      - name: Run the e2e testsuite
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost/${{ inputs.name }}'
        run: |
          source $(poetry env info --path)/bin/activate
          poetry install -E playwright
          playwright install chromium
          pytest tests/e2e/
