name: Publish Python package
on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      python_version:
        type: string
        required: true
      pip_version:
        type: string
        required: false
        default: ">=23,<23.1"
      poetry_version:
        type: string
        required: false
        default: ">=1.4.0,<1.5"
      artifact_name:
        type: string
        required: false
      artifact_path:
        type: string
        required: false
      region:
        type: string
        default: "eu-west-1"
    secrets:
      TECHONOMY_REPOS_GITHUB_TOKEN:
        required: true
      AWS_CODEARTIFACT_PRIMARY_ACCESS_KEY:
        required: true
      AWS_CODEARTIFACT_PRIMARY_ACCESS_SECRET:
        required: true

jobs:
  publish-python-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.TECHONOMY_REPOS_GITHUB_TOKEN }}
      - name: Download static files
        if: "${{ inputs.artifact_name }}"
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ inputs.artifact_path }}
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: "${{ inputs.python_version }}"
      - name: Setup ssh:// to https:// mapping with a token
        run: |
          git config --global url."https://${{ secrets.TECHONOMY_REPOS_GITHUB_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
      - name: Install additional software
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev libcurl4-openssl-dev gettext ${{ inputs.apt_extra_packages }}
      - name: Install Python dependencies
        env:
          PYCURL_SSL_LIBRARY: openssl
        run: |
          pip3 install "pip${{ inputs.pip_version }}" "poetry${{ inputs.poetry_version }}"
          make install
      - name: Build Python package
        env:
          PYCURL_SSL_LIBRARY: openssl
        run: |
          source $(poetry env info --path)/bin/activate
          make dist
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_CODEARTIFACT_PRIMARY_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_CODEARTIFACT_PRIMARY_ACCESS_SECRET }}
          aws-region: ${{ inputs.region }}
      - name: Upload package to AWS CodeArtifact (Private PyPI)
        env:
            POETRY_HTTP_BASIC_AWS_CODEARTIFACT_PRIMARY_USERNAME: aws
            AWS_CODEARTIFACT_PRIMARY_PYPI_REPOSITORY_URL: ${{ vars.AWS_CODEARTIFACT_PRIMARY_PYPI_REPOSITORY_URL }}
        run: |
          source $(poetry env info --path)/bin/activate
          export POETRY_HTTP_BASIC_AWS_CODEARTIFACT_PRIMARY_PASSWORD="$(aws codeartifact get-authorization-token --domain techonomy-dev --domain-owner 718089050198 --query authorizationToken --output text)"
          poetry source add --secondary aws-codeartifact-primary $AWS_CODEARTIFACT_PRIMARY_PYPI_REPOSITORY_URL
          poetry publish --repository aws-codeartifact-primary
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.name }}
          path: dist
          retention-days: 1
